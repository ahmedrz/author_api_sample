// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductAPI.DAL;

namespace ProductAPI.DAL.Migrations
{
    [DbContext(typeof(AuthorsDbContext))]
    partial class AuthorsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductAPI.DAL.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BOD")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BOD = new DateTime(1981, 3, 10, 11, 58, 2, 291, DateTimeKind.Local).AddTicks(306),
                            Country = "Iraq",
                            Name = "Author 1"
                        },
                        new
                        {
                            Id = 2,
                            BOD = new DateTime(1971, 3, 10, 11, 58, 2, 292, DateTimeKind.Local).AddTicks(4650),
                            Country = "United States",
                            Name = "Author 2"
                        });
                });

            modelBuilder.Entity("ProductAPI.DAL.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "Book 1 description",
                            IssueDate = new DateTime(2021, 3, 9, 11, 58, 2, 296, DateTimeKind.Local).AddTicks(191),
                            Name = "Author 1 : Book 1"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Description = "Book 2 description",
                            IssueDate = new DateTime(2021, 3, 9, 11, 58, 2, 296, DateTimeKind.Local).AddTicks(1291),
                            Name = "Author 1 : Book 2"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Description = "Book 1 description",
                            IssueDate = new DateTime(2021, 3, 9, 11, 58, 2, 296, DateTimeKind.Local).AddTicks(1325),
                            Name = "Author 2 : Book 1"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Description = "Book 2 description",
                            IssueDate = new DateTime(2021, 3, 9, 11, 58, 2, 296, DateTimeKind.Local).AddTicks(1329),
                            Name = "Author 2 : Book 2"
                        });
                });

            modelBuilder.Entity("ProductAPI.DAL.Book", b =>
                {
                    b.HasOne("ProductAPI.DAL.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ProductAPI.DAL.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
